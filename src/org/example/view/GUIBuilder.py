import os # –Ü–º–ø–æ—Ä—Ç—É—î –º–æ–¥—É–ª—å os –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –æ–ø–µ—Ä–∞—Ü—ñ–π–Ω–æ—é —Å–∏—Å—Ç–µ–º–æ—é, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤.
import tkinter as tk # –Ü–º–ø–æ—Ä—Ç—É—î –º–æ–¥—É–ª—å tkinter –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ—á–Ω–æ–≥–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (GUI).  –ó–∞–∑–≤–∏—á–∞–π —ñ–º–ø–æ—Ä—Ç—É—î—Ç—å—Å—è —è–∫ tk.
from tkinter import messagebox, ttk # –Ü–º–ø–æ—Ä—Ç—É—î –ø—ñ–¥–º–æ–¥—É–ª—ñ messagebox —Ç–∞ ttk –∑ tkinter.
#   - messagebox: –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤—ñ–∫–æ–Ω –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (–ø–æ–º–∏–ª–∫–∏, –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è, –∑–∞–ø–∏—Ç–∏).
#   - ttk: –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å—Ç–∏–ª—ñ–∑–æ–≤–∞–Ω–∏—Ö –≤—ñ–¥–∂–µ—Ç—ñ–≤ (–∫–Ω–æ–ø–∫–∏, –º—ñ—Ç–∫–∏, —Ç–æ—â–æ).
from PIL import Image, ImageTk # –Ü–º–ø–æ—Ä—Ç—É—î –∫–ª–∞—Å–∏ Image —Ç–∞ ImageTk –∑ –º–æ–¥—É–ª—è PIL (Python Imaging Library) –∞–±–æ Pillow.
#   - Image: –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è —Ç–∞ –º–∞–Ω—ñ–ø—É–ª—é–≤–∞–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º–∏.
#   - ImageTk: –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å —É tkinter.
from src.org.example.view.ListBoxManager import ListboxManager # –Ü–º–ø–æ—Ä—Ç—É—î –∫–ª–∞—Å ListboxManager –∑ –º–æ–¥—É–ª—è ListboxManager.py.
#   –¶–µ–π –∫–ª–∞—Å, –π–º–æ–≤—ñ—Ä–Ω–æ, –º—ñ—Å—Ç–∏—Ç—å –º–µ—Ç–æ–¥–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ –≤—ñ–¥–∂–µ—Ç—É Listbox.

class GUIBuilder:
    """
    –ö–ª–∞—Å GUIBuilder –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –ø–æ–±—É–¥–æ–≤—É –≥—Ä–∞—Ñ—ñ—á–Ω–æ–≥–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (GUI) –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–∏.
    –í—ñ–Ω –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É tkinter –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–∫–æ–Ω, –∫–Ω–æ–ø–æ–∫, –ø–æ–ª—ñ–≤ –≤–≤–æ–¥—É —Ç–∞ —ñ–Ω—à–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –∫–µ—Ä—É–≤–∞–Ω–Ω—è.
    """
    def __init__(self, root, control):
        """
        –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –æ–±'—î–∫—Ç GUIBuilder.

        Args:
            root (tk.Tk): –ö–æ—Ä–µ–Ω–µ–≤–∏–π –æ–±'—î–∫—Ç Tkinter, —è–∫–∏–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –≥–æ–ª–æ–≤–Ω–µ –≤—ñ–∫–Ω–æ –ø—Ä–æ–≥—Ä–∞–º–∏.
            control (Control): –û–±'—î–∫—Ç –∫–ª–∞—Å—É Control, —è–∫–∏–π –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –ª–æ–≥—ñ–∫—É –ø—Ä–æ–≥—Ä–∞–º–∏ —Ç–∞ –æ–±—Ä–æ–±–∫—É –ø–æ–¥—ñ–π.
        """
        self.tk_result_img = None # –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –æ–±'—î–∫—Ç–∞ PhotoImage, —è–∫–∏–π –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.  –ü–æ—á–∞—Ç–∫–æ–≤–æ None.
        self.root = root # –ó–±–µ—Ä—ñ–≥–∞—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∫–æ—Ä–µ–Ω–µ–≤–∏–π –æ–±'—î–∫—Ç Tkinter.
        self.control = control # –ó–±–µ—Ä—ñ–≥–∞—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –æ–±'—î–∫—Ç Control.
        self.view = None # –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –æ–±'—î–∫—Ç GalleryView.  –ü–æ—á–∞—Ç–∫–æ–≤–æ None.

        self.root.title("–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π —ñ–Ω–≤–µ–Ω—Ç–∞—Ä - ‚öΩüõπüèìüõºüéæ") # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞.
        self.root.geometry("550x950") # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î —Ä–æ–∑–º—ñ—Ä–∏ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ (—à–∏—Ä–∏–Ω–∞ x –≤–∏—Å–æ—Ç–∞).

        self.notebook = ttk.Notebook(self.root) # –°—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç Notebook, —è–∫–∏–π –¥–æ–∑–≤–æ–ª—è—î —Ä–æ–∑–º—ñ—â—É–≤–∞—Ç–∏ –¥–µ–∫—ñ–ª—å–∫–∞ –≤–∫–ª–∞–¥–æ–∫ –≤ –æ–¥–Ω–æ–º—É –≤—ñ–∫–Ω—ñ.
        self.input_tab = tk.Frame(self.notebook) # –°—Ç–≤–æ—Ä—é—î —Ñ—Ä–µ–π–º (–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä) –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ "–í–≤—ñ–¥ –¥–∞–Ω–∏—Ö".
        self.obj_tab = tk.Frame(self.notebook) # –°—Ç–≤–æ—Ä—é—î —Ñ—Ä–µ–π–º –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è".
        self.notebook.add(self.input_tab, text="–í–≤—ñ–¥ –¥–∞–Ω–∏—Ö") # –î–æ–¥–∞—î –≤–∫–ª–∞–¥–∫—É "–í–≤—ñ–¥ –¥–∞–Ω–∏—Ö" —É Notebook.
        self.notebook.add(self.obj_tab, text="–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è") # –î–æ–¥–∞—î –≤–∫–ª–∞–¥–∫—É "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è" —É Notebook.
        self.notebook.pack(fill="both", expand=True) # –†–æ–∑–º—ñ—â—É—î Notebook —É –≥–æ–ª–æ–≤–Ω–æ–º—É –≤—ñ–∫–Ω—ñ, –∑–∞–ø–æ–≤–Ω—é—é—á–∏ –≤–µ—Å—å –¥–æ—Å—Ç—É–ø–Ω–∏–π –ø—Ä–æ—Å—Ç—ñ—Ä.

        self.build_input_tab() # –í–∏–∫–ª–∏–∫–∞—î –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–±—É–¥–æ–≤–∏ –≤–º—ñ—Å—Ç—É –≤–∫–ª–∞–¥–∫–∏ "–í–≤—ñ–¥ –¥–∞–Ω–∏—Ö".
        self.build_output_tab() # –í–∏–∫–ª–∏–∫–∞—î –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–±—É–¥–æ–≤–∏ –≤–º—ñ—Å—Ç—É –≤–∫–ª–∞–¥–∫–∏ "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è".

    def build_input_tab(self):
        """
        –°—Ç–≤–æ—Ä—é—î —Ç–∞ —Ä–æ–∑–º—ñ—â—É—î –≤—ñ–¥–∂–µ—Ç–∏ –Ω–∞ –≤–∫–ª–∞–¥—Ü—ñ "–í–≤—ñ–¥ –¥–∞–Ω–∏—Ö".
        –í—ñ–¥–∂–µ—Ç–∏ –≤–∫–ª—é—á–∞—é—Ç—å –º—ñ—Ç–∫–∏, –ø–æ–ª—è –≤–≤–æ–¥—É, —Å–ø–∏—Å–∫–∏, –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ –æ–±'—î–∫—Ç (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —Ñ—É—Ç–±–æ–ª—å–Ω–∏–π –º'—è—á).
        """
        tk.Label(self.input_tab, text="–ù–∞–∑–≤–∞:").grid(row=0, column=0, sticky="w", padx=5, pady=5) # –°—Ç–≤–æ—Ä—é—î –º—ñ—Ç–∫—É "–ù–∞–∑–≤–∞:" —Ç–∞ —Ä–æ–∑–º—ñ—â—É—î —ó—ó —É –≤–∫–∞–∑–∞–Ω—ñ–π –∫–æ–º—ñ—Ä—Ü—ñ —Ç–∞–±–ª–∏—Ü—ñ.  sticky="w" –≤–∏—Ä—ñ–≤–Ω—é—î —Ç–µ–∫—Å—Ç –ø–æ –ª—ñ–≤–æ–º—É –∫—Ä–∞—é.
        self.name_entry = tk.Entry(self.input_tab, width=20) # –°—Ç–≤–æ—Ä—é—î –ø–æ–ª–µ –≤–≤–æ–¥—É –¥–ª—è –Ω–∞–∑–≤–∏ –æ–±'—î–∫—Ç–∞.
        self.name_entry.grid(row=0, column=1, padx=5, pady=5) # –†–æ–∑–º—ñ—â—É—î –ø–æ–ª–µ –≤–≤–æ–¥—É —É –≤–∫–∞–∑–∞–Ω—ñ–π –∫–æ–º—ñ—Ä—Ü—ñ —Ç–∞–±–ª–∏—Ü—ñ.

        tk.Label(self.input_tab, text="–¶—ñ–Ω–∞ (–≥—Ä–Ω):").grid(row=1, column=0, sticky="w", padx=5, pady=5) # –ú—ñ—Ç–∫–∞ –¥–ª—è —Ü—ñ–Ω–∏.
        self.price_entry = tk.Entry(self.input_tab, width=10) # –ü–æ–ª–µ –≤–≤–æ–¥—É –¥–ª—è —Ü—ñ–Ω–∏.
        self.price_entry.grid(row=1, column=1, padx=5, pady=5)

        tk.Label(self.input_tab, text="–í–∞–≥–∞ (–∫–≥):").grid(row=2, column=0, sticky="w", padx=5, pady=5) # –ú—ñ—Ç–∫–∞ –¥–ª—è –≤–∞–≥–∏.
        self.weight_entry = tk.Entry(self.input_tab, width=10) # –ü–æ–ª–µ –≤–≤–æ–¥—É –¥–ª—è –≤–∞–≥–∏.
        self.weight_entry.grid(row=2, column=1, padx=5, pady=5)

        tk.Label(self.input_tab, text="–î—ñ–∞–º–µ—Ç—Ä (—Å–º):").grid(row=3, column=0, sticky="w", padx=5, pady=5) # –ú—ñ—Ç–∫–∞ –¥–ª—è –¥—ñ–∞–º–µ—Ç—Ä—É.
        self.diameter_entry = tk.Entry(self.input_tab, width=10) # –ü–æ–ª–µ –≤–≤–æ–¥—É –¥–ª—è –¥—ñ–∞–º–µ—Ç—Ä—É.
        self.diameter_entry.grid(row=3, column=1, padx=5, pady=5)

        tk.Label(self.input_tab, text="–¢–∏—Å–∫ (–∞—Ç–º):").grid(row=4, column=0, sticky="w", padx=5, pady=5) # –ú—ñ—Ç–∫–∞ –¥–ª—è —Ç–∏—Å–∫—É.
        self.pressure_entry = tk.Entry(self.input_tab, width=10) # –ü–æ–ª–µ –≤–≤–æ–¥—É –¥–ª—è —Ç–∏—Å–∫—É.
        self.pressure_entry.grid(row=4, column=1, padx=5, pady=5)

        tk.Label(self.input_tab, text="–í–∏—Ä–æ–±–Ω–∏–∫:").grid(row=5, column=0, sticky="w", padx=5, pady=5) # –ú—ñ—Ç–∫–∞ –¥–ª—è –≤–∏—Ä–æ–±–Ω–∏–∫–∞.
        self.manufacturer_listbox = tk.Listbox(self.input_tab, height=4, width=10, exportselection=False) # –°—Ç–≤–æ—Ä—é—î —Å–ø–∏—Å–æ–∫ –¥–ª—è –≤–∏–±–æ—Ä—É –≤–∏—Ä–æ–±–Ω–∏–∫–∞. exportselection=False –¥–æ–∑–≤–æ–ª—è—î –≤–∏–¥—ñ–ª—è—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç–∏ —Å–ø–∏—Å–∫—É, –Ω–µ –∑–∞–±–∏—Ä–∞—é—á–∏ —Ñ–æ–∫—É—Å –∑ —ñ–Ω—à–∏—Ö –≤—ñ–¥–∂–µ—Ç—ñ–≤.
        self.manufacturer_scroll = tk.Scrollbar(self.input_tab, orient=tk.VERTICAL, command=self.manufacturer_listbox.yview) # –°—Ç–≤–æ—Ä—é—î —Å–º—É–≥—É –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –¥–ª—è —Å–ø–∏—Å–∫—É.
        self.manufacturer_listbox.config(yscrollcommand=self.manufacturer_scroll.set) # –ó–≤'—è–∑—É—î —Å–º—É–≥—É –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –∑—ñ —Å–ø–∏—Å–∫–æ–º.
        self.manufacturer_listbox.grid(row=5, column=1, padx=5, pady=5) # –†–æ–∑–º—ñ—â—É—î —Å–ø–∏—Å–æ–∫.
        self.manufacturer_scroll.grid(row=5, column=2, sticky="ns") # –†–æ–∑–º—ñ—â—É—î —Å–º—É–≥—É –ø—Ä–æ–∫—Ä—É—Ç–∫–∏. sticky="ns" —Ä–æ–∑—Ç—è–≥—É—î —Å–º—É–≥—É –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª—ñ.

        self.manufacturers = ["Adidas", "Nike", "Puma"] # –°–ø–∏—Å–æ–∫ –≤–∏—Ä–æ–±–Ω–∏–∫—ñ–≤.
        for item in self.manufacturers:
            self.manufacturer_listbox.insert(tk.END, item) # –î–æ–¥–∞—î –≤–∏—Ä–æ–±–Ω–∏–∫—ñ–≤ —É —Å–ø–∏—Å–æ–∫.

        tk.Label(self.input_tab, text="–ú–∞—Ç–µ—Ä—ñ–∞–ª:").grid(row=6, column=0, sticky="w", padx=5, pady=5) # –ú—ñ—Ç–∫–∞ –¥–ª—è –º–∞—Ç–µ—Ä—ñ–∞–ª—É.
        self.materials = ("–®–∫—ñ—Ä–∞", "–ì—É–º–∞", "–°–∏–Ω—Ç–µ—Ç–∏–∫–∞") # –ö–æ—Ä—Ç–µ–∂ –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤.
        self.selected_material = tk.StringVar(value=self.materials[0]) # –°—Ç–≤–æ—Ä—é—î –∑–º—ñ–Ω–Ω—É StringVar –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –æ–±—Ä–∞–Ω–æ–≥–æ –º–∞—Ç–µ—Ä—ñ–∞–ª—É.  –ü–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è - –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –∫–æ—Ä—Ç–µ–∂—É.
        tk.OptionMenu(self.input_tab, self.selected_material, *self.materials).grid(row=6, column=1, padx=5, pady=5) # –°—Ç–≤–æ—Ä—é—î –≤–∏–ø–∞–¥–∞—é—á–∏–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –≤–∏–±–æ—Ä—É –º–∞—Ç–µ—Ä—ñ–∞–ª—É.

        tk.Label(self.input_tab, text="–†—ñ–∫ –≤–∏–ø—É—Å–∫—É:").grid(row=7, column=0, sticky="w", padx=5, pady=5) # –ú—ñ—Ç–∫–∞ –¥–ª—è —Ä–æ–∫—É –≤–∏–ø—É—Å–∫—É.
        self.years = ("2020", "2021", "2022", "2023", "2024") # –ö–æ—Ä—Ç–µ–∂ —Ä–æ–∫—ñ–≤.
        self.selected_year = tk.StringVar(value=self.years[0]) # –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –æ–±—Ä–∞–Ω–æ–≥–æ —Ä–æ–∫—É.
        tk.OptionMenu(self.input_tab, self.selected_year, *self.years).grid(row=7, column=1, padx=5, pady=5) # –í–∏–ø–∞–¥–∞—é—á–∏–π —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ä–æ–∫—É.

        tk.Label(self.input_tab, text="–ö—Ä–∞—ó–Ω–∞ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞:").grid(row=8, column=0, sticky="w", padx=5, pady=5) # –ú—ñ—Ç–∫–∞ –¥–ª—è –∫—Ä–∞—ó–Ω–∏.
        self.countries = ("–£–∫—Ä–∞—ó–Ω–∞", "–°–®–ê", "–ö–∏—Ç–∞–π", "–ù—ñ–º–µ—á—á–∏–Ω–∞") # –ö–æ—Ä—Ç–µ–∂ –∫—Ä–∞—ó–Ω.
        self.selected_country = tk.StringVar(value=self.countries[0]) # –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –æ–±—Ä–∞–Ω–æ—ó –∫—Ä–∞—ó–Ω–∏.
        tk.OptionMenu(self.input_tab, self.selected_country, *self.countries).grid(row=8, column=1, padx=5, pady=5) # –í–∏–ø–∞–¥–∞—é—á–∏–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –∫—Ä–∞—ó–Ω–∏.

        tk.Label(self.input_tab, text="–ù–æ–≤–∏–π –≤–∏—Ä–æ–±–Ω–∏–∫:").grid(row=9, column=0, sticky="w", padx=5, pady=5) # –ú—ñ—Ç–∫–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –≤–∏—Ä–æ–±–Ω–∏–∫–∞.
        self.new_manufacturer_entry = tk.Entry(self.input_tab) # –ü–æ–ª–µ –≤–≤–æ–¥—É –¥–ª—è –Ω–∞–∑–≤–∏ –Ω–æ–≤–æ–≥–æ –≤–∏—Ä–æ–±–Ω–∏–∫–∞.
        self.new_manufacturer_entry.grid(row=9, column=1, padx=5, pady=5)

        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å–ø–∏—Å–∫–æ–º –≤–∏—Ä–æ–±–Ω–∏–∫—ñ–≤.
        tk.Button(self.input_tab, text="‚ûï –î–æ–¥–∞—Ç–∏", command=lambda: ListboxManager.add_item(self.manufacturer_listbox, self.new_manufacturer_entry)).grid(row=10, column=1, pady=2) # –ö–Ω–æ–ø–∫–∞ "–î–æ–¥–∞—Ç–∏".
        tk.Button(self.input_tab, text="‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏", command=lambda: ListboxManager.edit_item(self.manufacturer_listbox, self.new_manufacturer_entry)).grid(row=11, column=0, columnspan=2, pady=2) # –ö–Ω–æ–ø–∫–∞ "–†–µ–¥–∞–≥—É–≤–∞—Ç–∏". columnspan=2 –æ–±'—î–¥–Ω—É—î –¥–≤—ñ –∫–æ–º—ñ—Ä–∫–∏ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—ñ.
        tk.Button(self.input_tab, text="üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏", command=lambda: ListboxManager.delete_item(self.manufacturer_listbox)).grid(row=12, column=0, columnspan=2, pady=2) # –ö–Ω–æ–ø–∫–∞ "–í–∏–¥–∞–ª–∏—Ç–∏".
        tk.Button(self.input_tab, text="üîÉ –°–æ—Ä—Ç—É–≤–∞—Ç–∏", command=lambda: ListboxManager.sort_items(self.manufacturer_listbox)).grid(row=11, column=1, columnspan=2, pady=2) # –ö–Ω–æ–ø–∫–∞ "–°–æ—Ä—Ç—É–≤–∞—Ç–∏".
        tk.Button(self.input_tab, text="‚Ü©Ô∏è –ó–≤–æ—Ä–æ—Ç–Ω—ñ–π –ø–æ—Ä—è–¥–æ–∫", command=lambda: ListboxManager.reverse_items(self.manufacturer_listbox)).grid(row=12, column=1, columnspan=2, pady=2) # –ö–Ω–æ–ø–∫–∞ "–ó–≤–æ—Ä–æ—Ç–Ω—ñ–π –ø–æ—Ä—è–¥–æ–∫".

        self.image_display_label = tk.Label(self.input_tab) # –ú—ñ—Å—Ü–µ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –æ–±—Ä–∞–Ω–æ–≥–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.
        self.image_display_label.grid(row=13, column=0, columnspan=3, pady=10)

        tk.Button(self.input_tab, text="‚úÖ –°—Ç–≤–æ—Ä–∏—Ç–∏ –æ–±'—î–∫—Ç", command=self.control.create_soccer_ball).grid(row=15, column=1, pady=2) # –ö–Ω–æ–ø–∫–∞ "–°—Ç–≤–æ—Ä–∏—Ç–∏ –æ–±'—î–∫—Ç".  –í–∏–∫–ª–∏–∫–∞—î –º–µ—Ç–æ–¥ create_soccer_ball() –æ–±'—î–∫—Ç–∞ control –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ.

    def build_output_tab(self):
        """
        –°—Ç–≤–æ—Ä—é—î —Ç–∞ —Ä–æ–∑–º—ñ—â—É—î –≤—ñ–¥–∂–µ—Ç–∏ –Ω–∞ –≤–∫–ª–∞–¥—Ü—ñ "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è".
        –í—ñ–¥–∂–µ—Ç–∏ –≤–∫–ª—é—á–∞—é—Ç—å –º—ñ—Ç–∫–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –æ–±'—î–∫—Ç —Ç–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –º—ñ–∂ –æ–±'—î–∫—Ç–∞–º–∏.
        """
        self.result_label = tk.Label(self.obj_tab, text="", font=("Arial", 12), justify=tk.CENTER) # –ú—ñ—Ç–∫–∞ –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –æ–±'—î–∫—Ç.
        self.result_label.grid(row=0, column=0, columnspan=3, padx=5, pady=2, sticky="ew") # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è –º—ñ—Ç–∫–∏. sticky="ew" —Ä–æ–∑—Ç—è–≥—É—î –º—ñ—Ç–∫—É –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—ñ.

        self.result_image_label = tk.Label(self.obj_tab) # –ú—ñ—Ç–∫–∞ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞.
        self.result_image_label.grid(row=1, column=0, columnspan=3, padx=5, sticky="ew")

        # –î–æ–¥–∞–≤–∞–Ω–Ω—è –≤–∏–±–æ—Ä—É –¥–∂–µ—Ä–µ–ª–∞ –¥–∞–Ω–∏—Ö
        tk.Label(self.obj_tab, text="–î–∂–µ—Ä–µ–ª–æ –¥–∞–Ω–∏—Ö:").grid(row=2, column=0, sticky="w", padx=5, pady=5) # –ú—ñ—Ç–∫–∞ "–î–∂–µ—Ä–µ–ª–æ –¥–∞–Ω–∏—Ö".
        self.source_var = tk.StringVar(value="json") # –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –æ–±—Ä–∞–Ω–æ–≥–æ –¥–∂–µ—Ä–µ–ª–∞ –¥–∞–Ω–∏—Ö.  –ü–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è - "json".
        sources = ("JSON", "TXT", "CSV", "BIN") # –ö–æ—Ä—Ç–µ–∂ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –¥–∂–µ—Ä–µ–ª –¥–∞–Ω–∏—Ö.
        tk.OptionMenu(self.obj_tab, self.source_var, *sources, command=self.control.load_objects_from_source).grid(row=2, column=1, columnspan=2, padx=5, pady=5) # –í–∏–ø–∞–¥–∞—é—á–∏–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –≤–∏–±–æ—Ä—É –¥–∂–µ—Ä–µ–ª–∞.  –ü—Ä–∏ –∑–º—ñ–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –º–µ—Ç–æ–¥ load_objects_from_source() –æ–±'—î–∫—Ç–∞ control.

        # –ú—ñ—Ç–∫–∞ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –¥–∂–µ—Ä–µ–ª–∞ –¥–∞–Ω–∏—Ö.
        self.data_source_label = tk.Label(self.obj_tab, text="–î–∂–µ—Ä–µ–ª–æ –¥–∞–Ω–∏—Ö: JSON", font=("Arial", 10), justify=tk.CENTER)
        self.data_source_label.grid(row=3, column=0, columnspan=3, padx=5, pady=2, sticky="ew")

        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó —Ç–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤.
        ttk.Button(self.obj_tab, text="‚¨ÖÔ∏è –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –æ–±'—î–∫—Ç", command=self.control.show_previous_loaded_object).grid(row=4, column=0, padx=10, pady=5, sticky="w") # –ö–Ω–æ–ø–∫–∞ "–ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π".
        ttk.Button(self.obj_tab, text="‚û°Ô∏è –ù–∞—Å—Ç—É–ø–Ω–∏–π –æ–±'—î–∫—Ç", command=self.control.show_next_loaded_object).grid(row=4, column=2, padx=10, pady=5, sticky="e") # –ö–Ω–æ–ø–∫–∞ "–ù–∞—Å—Ç—É–ø–Ω–∏–π".
        ttk.Button(self.obj_tab, text="üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –æ–±'—î–∫—Ç", command=self.control.delete_current_object, width=20).grid(row=5, column=0, columnspan=3, padx=10, sticky="ew") # –ö–Ω–æ–ø–∫–∞ "–í–∏–¥–∞–ª–∏—Ç–∏".

    def update_result_image(self, image_path):
        """
        –û–Ω–æ–≤–ª—é—î –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–∞ –≤–∫–ª–∞–¥—Ü—ñ "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è".

        Args:
            image_path (str): –®–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.
        """
        try:
            img = Image.open(image_path) # –í—ñ–¥–∫—Ä–∏–≤–∞—î –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º —à–ª—è—Ö–æ–º.
            img = img.resize((250, 150)) # –ó–º—ñ–Ω—é—î —Ä–æ–∑–º—ñ—Ä –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–æ 250x150 –ø—ñ–∫—Å–µ–ª—ñ–≤.
            self.tk_result_img = ImageTk.PhotoImage(img) # –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è PIL —É —Ñ–æ—Ä–º–∞—Ç, –ø—Ä–∏–¥–∞—Ç–Ω–∏–π –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤ tkinter.
            self.result_image_label.config(image=self.tk_result_img, text="") # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —É –º—ñ—Ç–∫—É —Ç–∞ –æ—á–∏—â–∞—î —Ç–µ–∫—Å—Ç –º—ñ—Ç–∫–∏.
            self.result_image_label.image = self.tk_result_img # –ó–±–µ—Ä—ñ–≥–∞—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –æ–±'—î–∫—Ç PhotoImage, —â–æ–± –∑–∞–ø–æ–±—ñ–≥—Ç–∏ –π–æ–≥–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—é –∑–±–∏—Ä–∞—á–µ–º —Å–º—ñ—Ç—Ç—è.
        except Exception as e: # –û–±—Ä–æ–±–ª—è—î –º–æ–∂–ª–∏–≤—ñ –ø–æ–º–∏–ª–∫–∏ –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ –∞–±–æ –æ–±—Ä–æ–±—Ü—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.
            self.result_image_label.config(image='', text=f"‚ùå {e}") # –í–∏–≤–æ–¥–∏—Ç—å —Å–∏–º–≤–æ–ª "X" —Ç–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É —É –º—ñ—Ç—Ü—ñ.

    def set_gallery_view(self, view):
        """
        –í—Å—Ç–∞–Ω–æ–≤–ª—é—î –æ–±'—î–∫—Ç GalleryView –¥–ª—è –ø–æ–¥–∞–ª—å—à–æ—ó –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ –Ω–∏–º.

        Args:
            view (GalleryView): –û–±'—î–∫—Ç –∫–ª–∞—Å—É GalleryView.
        """
        self.view = view # –ó–±–µ—Ä—ñ–≥–∞—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –æ–±'—î–∫—Ç GalleryView.
        self.view.image_label = self.image_display_label # –ü–µ—Ä–µ–¥–∞—î –º—ñ—Ç—Ü—ñ GalleryView, –≤ —è–∫—ñ–π –≤—ñ–¥–æ–±—Ä–∞–∂–∞—é—Ç—å—Å—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.
        # –°—Ç–≤–æ—Ä—é—î –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–µ–≥–æ—Ä—Ç–∞–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å –≤ –≥–∞–ª–µ—Ä–µ—ó.
        tk.Button(self.input_tab, text="‚¨ÖÔ∏è –ü–æ–ø–µ—Ä–µ–¥–Ω—î", command=self.view.prev_image).grid(row=14, column=0, padx=10)
        tk.Button(self.input_tab, text="‚û°Ô∏è –ù–∞—Å—Ç—É–ø–Ω–µ", command=self.view.next_image).grid(row=14, column=2, padx=10)

    def update_data_source(self, source):
        """
        –û–Ω–æ–≤–ª—é—î —Ç–µ–∫—Å—Ç –º—ñ—Ç–∫–∏, —â–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î –ø–æ—Ç–æ—á–Ω–µ –¥–∂–µ—Ä–µ–ª–æ –¥–∞–Ω–∏—Ö.

        Args:
            source (str): –ù–∞–∑–≤–∞ –¥–∂–µ—Ä–µ–ª–∞ –¥–∞–Ω–∏—Ö ("JSON", "TXT", "CSV" –∞–±–æ "BIN").
        """
        self.data_source_label.config(text=f"–î–∂–µ—Ä–µ–ª–æ –¥–∞–Ω–∏—Ö: {source}") # –û–Ω–æ–≤–ª—é—î —Ç–µ–∫—Å—Ç –º—ñ—Ç–∫–∏.
