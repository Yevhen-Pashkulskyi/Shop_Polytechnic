
import os # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –º–æ–¥—É–ª—å os –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ñ–∞–π–ª–æ–≤–æ—é —Å–∏—Å—Ç–µ–º–æ—é.
import tkinter as tk # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π –º–æ–¥—É–ª—å tkinter –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è GUI.
from tkinter import messagebox, ttk # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –ø—ñ–¥–º–æ–¥—É–ª—ñ messagebox —Ç–∞ ttk (—Å—Ç–∏–ª—ñ–∑–æ–≤–∞–Ω—ñ –≤—ñ–¥–∂–µ—Ç–∏).
from PIL import Image, ImageTk # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –∫–ª–∞—Å–∏ Image —Ç–∞ ImageTk –∑ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ Pillow –¥–ª—è —Ä–æ–±–æ—Ç–∏ —ñ–∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º–∏.
from src.org.example.view.ListBoxManager import ListboxManager # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –∫–ª–∞—Å ListboxManager –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è —Å–ø–∏—Å–∫–∞–º–∏.

class GUIBuilder:
    """
    –ö–ª–∞—Å –¥–ª—è –ø–æ–±—É–¥–æ–≤–∏ –≥—Ä–∞—Ñ—ñ—á–Ω–æ–≥–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (GUI).
    –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è –≤—ñ–¥–∂–µ—Ç—ñ–≤ –Ω–∞ –≥–æ–ª–æ–≤–Ω–æ–º—É –≤—ñ–∫–Ω—ñ.
    """
    def __init__(self, root, control):
        """
        –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ç–æ—Ä –∫–ª–∞—Å—É GUIBuilder.

        Args:
            root (tkinter.Tk): –ì–æ–ª–æ–≤–Ω–µ –≤—ñ–∫–Ω–æ –ø—Ä–æ–≥—Ä–∞–º–∏.
            control (Control): –ï–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—É Control –¥–ª—è –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ –ª–æ–≥—ñ–∫–æ—é –ø—Ä–æ–≥—Ä–∞–º–∏.
        """
        self.tk_result_img = None # –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –æ–±'—î–∫—Ç–∞ ImageTk.PhotoImage –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.
        self.root = root # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≥–æ–ª–æ–≤–Ω–µ –≤—ñ–∫–Ω–æ.
        self.control = control # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä.
        self.view = None # –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –æ–±'—î–∫—Ç GalleryView.

        self.root.title("–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π —ñ–Ω–≤–µ–Ω—Ç–∞—Ä - ‚öΩüõπüèìüõºüéæ") # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞.
        self.root.geometry("550x950") # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ä–æ–∑–º—ñ—Ä–∏ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞.

        self.notebook = ttk.Notebook(self.root) # –°—Ç–≤–æ—Ä—é—î–º–æ –≤—ñ–¥–∂–µ—Ç Notebook –¥–ª—è –≤–∫–ª–∞–¥–æ–∫.
        self.input_tab = tk.Frame(self.notebook) # –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ—Ä–µ–π–º –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ –≤–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö.
        self.obj_tab = tk.Frame(self.notebook) # –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ—Ä–µ–π–º –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –æ–±'—î–∫—Ç.
        self.notebook.add(self.input_tab, text="–í–≤—ñ–¥ –¥–∞–Ω–∏—Ö") # –î–æ–¥–∞—î–º–æ –≤–∫–ª–∞–¥–∫—É –≤–≤–µ–¥–µ–Ω–Ω—è –¥–æ Notebook.
        self.notebook.add(self.obj_tab, text="–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è") # –î–æ–¥–∞—î–º–æ –≤–∫–ª–∞–¥–∫—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–æ Notebook.
        self.notebook.pack(fill="both", expand=True) # –†–æ–∑–º—ñ—â—É—î–º–æ Notebook –Ω–∞ –≥–æ–ª–æ–≤–Ω–æ–º—É –≤—ñ–∫–Ω—ñ –∑ —Ä–æ–∑—Ç—è–≥—É–≤–∞–Ω–Ω—è–º.

        self.build_input_tab() # –í–∏–∫–ª–∏–∫–∞—î–º–æ –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–±—É–¥–æ–≤–∏ –≤–º—ñ—Å—Ç—É –≤–∫–ª–∞–¥–∫–∏ –≤–≤–µ–¥–µ–Ω–Ω—è.
        self.build_output_tab() # –í–∏–∫–ª–∏–∫–∞—î–º–æ –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–±—É–¥–æ–≤–∏ –≤–º—ñ—Å—Ç—É –≤–∫–ª–∞–¥–∫–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó.

    def build_input_tab(self):
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è –≤—ñ–¥–∂–µ—Ç—ñ–≤ –Ω–∞ –≤–∫–ª–∞–¥—Ü—ñ –≤–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö.
        """
        tk.Label(self.input_tab, text="–ù–∞–∑–≤–∞:").grid(row=0, column=0, sticky="w", padx=5, pady=5) # –ú—ñ—Ç–∫–∞ "–ù–∞–∑–≤–∞".
        self.name_entry = tk.Entry(self.input_tab, width=20) # –ü–æ–ª–µ –≤–≤–µ–¥–µ–Ω–Ω—è –¥–ª—è –Ω–∞–∑–≤–∏.
        self.name_entry.grid(row=0, column=1, padx=5, pady=5) # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è –ø–æ–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –¥–ª—è –Ω–∞–∑–≤–∏.

        tk.Label(self.input_tab, text="–¶—ñ–Ω–∞ (–≥—Ä–Ω):").grid(row=1, column=0, sticky="w", padx=5, pady=5) # –ú—ñ—Ç–∫–∞ "–¶—ñ–Ω–∞".
        self.price_entry = tk.Entry(self.input_tab, width=10) # –ü–æ–ª–µ –≤–≤–µ–¥–µ–Ω–Ω—è –¥–ª—è —Ü—ñ–Ω–∏.
        self.price_entry.grid(row=1, column=1, padx=5, pady=5) # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è –ø–æ–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –¥–ª—è —Ü—ñ–Ω–∏.

        tk.Label(self.input_tab, text="–í–∞–≥–∞ (–∫–≥):").grid(row=2, column=0, sticky="w", padx=5, pady=5) # –ú—ñ—Ç–∫–∞ "–í–∞–≥–∞".
        self.weight_entry = tk.Entry(self.input_tab, width=10) # –ü–æ–ª–µ –≤–≤–µ–¥–µ–Ω–Ω—è –¥–ª—è –≤–∞–≥–∏.
        self.weight_entry.grid(row=2, column=1, padx=5, pady=5) # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è –ø–æ–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –¥–ª—è –≤–∞–≥–∏.

        tk.Label(self.input_tab, text="–î—ñ–∞–º–µ—Ç—Ä (—Å–º):").grid(row=3, column=0, sticky="w", padx=5, pady=5) # –ú—ñ—Ç–∫–∞ "–î—ñ–∞–º–µ—Ç—Ä".
        self.diameter_entry = tk.Entry(self.input_tab, width=10) # –ü–æ–ª–µ –≤–≤–µ–¥–µ–Ω–Ω—è –¥–ª—è –¥—ñ–∞–º–µ—Ç—Ä–∞.
        self.diameter_entry.grid(row=3, column=1, padx=5, pady=5) # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è –ø–æ–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –¥–ª—è –¥—ñ–∞–º–µ—Ç—Ä–∞.

        tk.Label(self.input_tab, text="–¢–∏—Å–∫ (–∞—Ç–º):").grid(row=4, column=0, sticky="w", padx=5, pady=5) # –ú—ñ—Ç–∫–∞ "–¢–∏—Å–∫".
        self.pressure_entry = tk.Entry(self.input_tab, width=10) # –ü–æ–ª–µ –≤–≤–µ–¥–µ–Ω–Ω—è –¥–ª—è —Ç–∏—Å–∫—É.
        self.pressure_entry.grid(row=4, column=1, padx=5, pady=5) # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è –ø–æ–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –¥–ª—è —Ç–∏—Å–∫—É.

        tk.Label(self.input_tab, text="–í–∏—Ä–æ–±–Ω–∏–∫:").grid(row=5, column=0, sticky="w", padx=5, pady=5) # –ú—ñ—Ç–∫–∞ "–í–∏—Ä–æ–±–Ω–∏–∫".
        self.manufacturer_listbox = tk.Listbox(self.input_tab, height=4, width=10, exportselection=False) # –°–ø–∏—Å–æ–∫ –≤–∏—Ä–æ–±–Ω–∏–∫—ñ–≤.
        self.manufacturer_scroll = tk.Scrollbar(self.input_tab, orient=tk.VERTICAL, command=self.manufacturer_listbox.yview) # –°–∫—Ä–æ–ª–±–∞—Ä –¥–ª—è —Å–ø–∏—Å–∫—É –≤–∏—Ä–æ–±–Ω–∏–∫—ñ–≤.
        self.manufacturer_listbox.config(yscrollcommand=self.manufacturer_scroll.set) # –ü—Ä–∏–≤'—è–∑—É—î–º–æ —Å–∫—Ä–æ–ª–±–∞—Ä –¥–æ —Å–ø–∏—Å–∫—É.
        self.manufacturer_listbox.grid(row=5, column=1, padx=5, pady=5) # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –≤–∏—Ä–æ–±–Ω–∏–∫—ñ–≤.
        self.manufacturer_scroll.grid(row=5, column=2, sticky="ns") # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è —Å–∫—Ä–æ–ª–±–∞—Ä–∞.

        self.manufacturers = ["Adidas", "Nike", "Puma"] # –ü–æ—á–∞—Ç–∫–æ–≤—ñ –≤–∏—Ä–æ–±–Ω–∏–∫–∏.
        for item in self.manufacturers:
            self.manufacturer_listbox.insert(tk.END, item) # –î–æ–¥–∞—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏—Ö –≤–∏—Ä–æ–±–Ω–∏–∫—ñ–≤ –¥–æ —Å–ø–∏—Å–∫—É.

        tk.Label(self.input_tab, text="–ú–∞—Ç–µ—Ä—ñ–∞–ª:").grid(row=6, column=0, sticky="w", padx=5, pady=5) # –ú—ñ—Ç–∫–∞ "–ú–∞—Ç–µ—Ä—ñ–∞–ª".
        self.materials = ("–®–∫—ñ—Ä–∞", "–ì—É–º–∞", "–°–∏–Ω—Ç–µ—Ç–∏–∫–∞") # –í–∞—Ä—ñ–∞–Ω—Ç–∏ –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤.
        self.selected_material = tk.StringVar(value=self.materials[0]) # –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –æ–±—Ä–∞–Ω–æ–≥–æ –º–∞—Ç–µ—Ä—ñ–∞–ª—É.
        tk.OptionMenu(self.input_tab, self.selected_material, *self.materials).grid(row=6, column=1, padx=5, pady=5) # –í–∏–ø–∞–¥–∞—é—á–∏–π —Å–ø–∏—Å–æ–∫ –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤.

        tk.Label(self.input_tab, text="–†—ñ–∫ –≤–∏–ø—É—Å–∫—É:").grid(row=7, column=0, sticky="w", padx=5, pady=5) # –ú—ñ—Ç–∫–∞ "–†—ñ–∫ –≤–∏–ø—É—Å–∫—É".
        self.years = ("2020", "2021", "2022", "2023", "2024") # –í–∞—Ä—ñ–∞–Ω—Ç–∏ —Ä–æ–∫—ñ–≤ –≤–∏–ø—É—Å–∫—É.
        self.selected_year = tk.StringVar(value=self.years[0]) # –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –æ–±—Ä–∞–Ω–æ–≥–æ —Ä–æ–∫—É.
        tk.OptionMenu(self.input_tab, self.selected_year, *self.years).grid(row=7, column=1, padx=5, pady=5) # –í–∏–ø–∞–¥–∞—é—á–∏–π —Å–ø–∏—Å–æ–∫ —Ä–æ–∫—ñ–≤.

        tk.Label(self.input_tab, text="–ö—Ä–∞—ó–Ω–∞ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞:").grid(row=8, column=0, sticky="w", padx=5, pady=5) # –ú—ñ—Ç–∫–∞ "–ö—Ä–∞—ó–Ω–∞".
        self.countries = ("–£–∫—Ä–∞—ó–Ω–∞", "–°–®–ê", "–ö–∏—Ç–∞–π", "–ù—ñ–º–µ—á—á–∏–Ω–∞") # –í–∞—Ä—ñ–∞–Ω—Ç–∏ –∫—Ä–∞—ó–Ω.
        self.selected_country = tk.StringVar(value=self.countries[0]) # –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –æ–±—Ä–∞–Ω–æ—ó –∫—Ä–∞—ó–Ω–∏.
        tk.OptionMenu(self.input_tab, self.selected_country, *self.countries).grid(row=8, column=1, padx=5, pady=5) # –í–∏–ø–∞–¥–∞—é—á–∏–π —Å–ø–∏—Å–æ–∫ –∫—Ä–∞—ó–Ω.

        tk.Label(self.input_tab, text="–ù–æ–≤–∏–π –≤–∏—Ä–æ–±–Ω–∏–∫:").grid(row=9, column=0, sticky="w", padx=5, pady=5) # –ú—ñ—Ç–∫–∞ "–ù–æ–≤–∏–π –≤–∏—Ä–æ–±–Ω–∏–∫".
        self.new_manufacturer_entry = tk.Entry(self.input_tab) # –ü–æ–ª–µ –≤–≤–µ–¥–µ–Ω–Ω—è –¥–ª—è –Ω–æ–≤–æ–≥–æ –≤–∏—Ä–æ–±–Ω–∏–∫–∞.
        self.new_manufacturer_entry.grid(row=9, column=1, padx=5, pady=5) # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è –ø–æ–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –¥–ª—è –Ω–æ–≤–æ–≥–æ –≤–∏—Ä–æ–±–Ω–∏–∫–∞.

        tk.Button(self.input_tab, text="‚ûï –î–æ–¥–∞—Ç–∏", command=lambda: ListboxManager.add_item(self.manufacturer_listbox, self.new_manufacturer_entry)).grid(row=10, column=1, pady=2) # –ö–Ω–æ–ø–∫–∞ "–î–æ–¥–∞—Ç–∏ –≤–∏—Ä–æ–±–Ω–∏–∫–∞".
        tk.Button(self.input_tab, text="‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏", command=lambda: ListboxManager.edit_item(self.manufacturer_listbox, self.new_manufacturer_entry)).grid(row=11, column=0, columnspan=2, pady=2) # –ö–Ω–æ–ø–∫–∞ "–†–µ–¥–∞–≥—É–≤–∞—Ç–∏".
        tk.Button(self.input_tab, text="üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏", command=lambda: ListboxManager.delete_item(self.manufacturer_listbox)).grid(row=12, column=0, columnspan=2, pady=2) # –ö–Ω–æ–ø–∫–∞ "–í–∏–¥–∞–ª–∏—Ç–∏".
        tk.Button(self.input_tab, text="üîÉ –°–æ—Ä—Ç—É–≤–∞—Ç–∏", command=lambda: ListboxManager.sort_items(self.manufacturer_listbox)).grid(row=11, column=1, columnspan=2, pady=2) # –ö–Ω–æ–ø–∫–∞ "–°–æ—Ä—Ç—É–≤–∞—Ç–∏".
        tk.Button(self.input_tab, text="‚Ü©Ô∏è –ó–≤–æ—Ä–æ—Ç–Ω—ñ–π –ø–æ—Ä—è–¥–æ–∫", command=lambda: ListboxManager.reverse_items(self.manufacturer_listbox)).grid(row=12, column=1, columnspan=2, pady=2) # –ö–Ω–æ–ø–∫–∞ "–ó–≤–æ—Ä–æ—Ç–Ω—ñ–π –ø–æ—Ä—è–¥–æ–∫".

        self.image_display_label = tk.Label(self.input_tab) # –ú—ñ—Å—Ü–µ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.
        self.image_display_label.grid(row=13, column=0, columnspan=3, pady=10) # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è –º—ñ—Å—Ü—è –¥–ª—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.

        tk.Button(self.input_tab, text="‚úÖ –°—Ç–≤–æ—Ä–∏—Ç–∏ –æ–±'—î–∫—Ç", command=self.control.create_soccer_ball).grid(row=15, column=1, pady=2) # –ö–Ω–æ–ø–∫–∞ "–°—Ç–≤–æ—Ä–∏—Ç–∏ –æ–±'—î–∫—Ç".

    def build_output_tab(self):
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è –≤—ñ–¥–∂–µ—Ç—ñ–≤ –Ω–∞ –≤–∫–ª–∞–¥—Ü—ñ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –æ–±'—î–∫—Ç.
        """
        self.result_label = tk.Label(self.obj_tab, text="", font=("Arial", 12), justify=tk.CENTER) # –ú—ñ—Ç–∫–∞ –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –æ–±'—î–∫—Ç.
        self.result_label.grid(row=0, column=0, columnspan=3, padx=5, pady=2, sticky="ew") # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è –º—ñ—Ç–∫–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó.

        self.result_image_label = tk.Label(self.obj_tab) # –ú—ñ—Å—Ü–µ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞.
        self.result_image_label.grid(row=1, column=0, columnspan=3, padx=5, sticky="ew") # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è –º—ñ—Å—Ü—è –¥–ª—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞.

        ttk.Button(self.obj_tab, text="‚¨ÖÔ∏è –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –æ–±'—î–∫—Ç", command=self.control.show_previous_loaded_object).grid(row=2, column=0, padx=10, pady=5, sticky="w") # –ö–Ω–æ–ø–∫–∞ "–ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –æ–±'—î–∫—Ç".
        ttk.Button(self.obj_tab, text="‚û°Ô∏è –ù–∞—Å—Ç—É–ø–Ω–∏–π –æ–±'—î–∫—Ç", command=self.control.show_next_loaded_object).grid(row=2, column=2, padx=10, pady=5, sticky="e") # –ö–Ω–æ–ø–∫–∞ "–ù–∞—Å—Ç—É–ø–Ω–∏–π –æ–±'—î–∫—Ç".
        ttk.Button(self.obj_tab, text="üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –æ–±'—î–∫—Ç", command=self.control.delete_current_object, width=20).grid(row=3, column=0, columnspan=3, padx=10, sticky="ew") # –ö–Ω–æ–ø–∫–∞ "–í–∏–¥–∞–ª–∏—Ç–∏ –æ–±'—î–∫—Ç".

    def update_result_image(self, image_path):
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —É –≤—ñ–¥–∂–µ—Ç—ñ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤.

        Args:
            image_path (str): –®–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.
        """
        try:
            img = Image.open(image_path) # –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞ —à–ª—è—Ö–æ–º.
            img = img.resize((250, 150)) # –ó–º—ñ–Ω—é—î–º–æ —Ä–æ–∑–º—ñ—Ä –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.
            self.tk_result_img = ImageTk.PhotoImage(img) # –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç PhotoImage –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤ Tkinter.
            self.result_image_label.config(image=self.tk_result_img, text="") # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —É –≤—ñ–¥–∂–µ—Ç—ñ —Ç–∞ –ø—Ä–∏–±–∏—Ä–∞—î–º–æ —Ç–µ–∫—Å—Ç.
            self.result_image_label.image = self.tk_result_img # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –æ–±'—î–∫—Ç PhotoImage, —â–æ–± –≤—ñ–Ω –Ω–µ –±—É–≤ –≤–∏–¥–∞–ª–µ–Ω–∏–π –∑–±–∏—Ä–∞—á–µ–º —Å–º—ñ—Ç—Ç—è.
        except Exception as e: # –û–±—Ä–æ–±–ª—è—î–º–æ –º–æ–∂–ª–∏–≤—ñ –≤–∏–Ω—è—Ç–∫–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ).
            self.result_image_label.config(image='', text=f"‚ùå {e}") # –í–∏–≤–æ–¥–∏–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É.

    def set_gallery_view(self, view):
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ GalleryView —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó.

        Args:
            view (GalleryView): –û–±'—î–∫—Ç GalleryView.
        """
        self.view = view # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –æ–±'—î–∫—Ç GalleryView.
        self.view.image_label = self.image_display_label # –ü–µ—Ä–µ–¥–∞—î–º–æ –≤—ñ–¥–∂–µ—Ç –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å –≤ GalleryView.
        tk.Button(self.input_tab, text="‚¨ÖÔ∏è –ü–æ–ø–µ—Ä–µ–¥–Ω—î", command=self.view.prev_image).grid(row=14, column=0, padx=10) # –ö–Ω–æ–ø–∫–∞ "–ü–æ–ø–µ—Ä–µ–¥–Ω—î" –¥–ª—è –ø–µ—Ä–µ–≥–æ—Ä—Ç–∞–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å.
        tk.Button(self.input_tab, text="‚û°Ô∏è –ù–∞—Å—Ç—É–ø–Ω–µ", command=self.view.next_image).grid(row=14, column=2, padx=10) # –ö–Ω–æ–ø–∫–∞ "–ù–∞—Å—Ç—É–ø–Ω–µ" –¥–ª—è –ø–µ—Ä–µ–≥–æ—Ä—Ç–∞–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å.
