import os
from tkinter import messagebox, ttk
from PIL import Image, ImageTk
from src.org.example.control.Control import Control
from tkinter import *
from src.org.example.view.ListBoxManager import ListboxManager


# —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ç–æ–±—Ç–æ –≤—ñ–∫–Ω–æ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ç–∞ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø—Ä–æ–≥—Ä–∞–º–æ—é
class GUIBuilder:
    def __init__(self, root):
        self.tk_result_img = None
        self.root = root
        self.view = None
        self.control = Control(self)

        self.root.title("–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π —ñ–Ω–≤–µ–Ω—Ç–∞—Ä - ‚öΩ –§—É—Ç–±–æ–ª—å–Ω–∏–π –º'—è—á")
        self.root.geometry("700x900")

        self.notebook = ttk.Notebook(self.root)
        # –≤–∫–ª–∞–¥–∫–∞ –¥–ª—è –≤–≤–æ–¥—É –¥–∞–Ω–∏—Ö
        self.input_tab = Frame(self.notebook)
        self.notebook.add(self.input_tab, text="–í–≤—ñ–¥ –¥–∞–Ω–∏—Ö")
        # –≤–∫–ª–∞–¥–∫–∞ –¥–ª—è –≤–∏–≤—ñ–¥—É –¥–∞–Ω–∏—Ö
        self.obj_tab = Frame(self.notebook)
        self.notebook.add(self.obj_tab, text="–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è")
        self.notebook.pack(fill="both", expand=True)

        # –í–≤—ñ–¥ –∞—Ç—Ä–∏–±—É—Ç—ñ–≤ —É –≤—ñ–∫–Ω–æ
        # –Ω–∞–∑–≤–∞
        Label(self.input_tab, text="–ù–∞–∑–≤–∞:").grid(row=0, column=0, sticky="w", padx=5, pady=5)
        self.name_entry = Entry(self.input_tab, width=30)
        self.name_entry.grid(row=0, column=1, padx=5, pady=5)
        # —Ü—ñ–Ω–∞
        Label(self.input_tab, text="–¶—ñ–Ω–∞ (–≥—Ä–Ω):").grid(row=1, column=0, sticky="w", padx=5, pady=5)
        self.price_entry = Entry(self.input_tab, width=10)
        self.price_entry.grid(row=1, column=1, padx=5, pady=5)
        # –≤–∞–≥–∞
        Label(self.input_tab, text="–í–∞–≥–∞ (–∫–≥):").grid(row=2, column=0, sticky="w", padx=5, pady=5)
        self.weight_entry = Entry(self.input_tab, width=10)
        self.weight_entry.grid(row=2, column=1, padx=5, pady=5)

        Label(self.input_tab, text="–î—ñ–∞–º–µ—Ç—Ä (—Å–º):").grid(row=3, column=0, sticky="w", padx=5, pady=5)
        self.diameter_entry = Entry(self.input_tab, width=10)
        self.diameter_entry.grid(row=3, column=1, padx=5, pady=5)

        Label(self.input_tab, text="–¢–∏—Å–∫ (–∞—Ç–º):").grid(row=4, column=0, sticky="w", padx=5, pady=5)
        self.pressure_entry = Entry(self.input_tab, width=10)
        self.pressure_entry.grid(row=4, column=1, padx=5, pady=5)

        # --- –í–∏—Ä–æ–±–Ω–∏–∫ (Listbox + scrollbar)
        Label(self.input_tab, text="–í–∏—Ä–æ–±–Ω–∏–∫:").grid(row=5, column=0, sticky="w", padx=5, pady=5)
        self.manufacturer_listbox = Listbox(self.input_tab, height=4, exportselection=False)
        self.manufacturer_scroll = Scrollbar(self.input_tab, orient=VERTICAL,
                                             command=self.manufacturer_listbox.yview)
        self.manufacturer_listbox.config(yscrollcommand=self.manufacturer_scroll.set)
        self.manufacturer_listbox.grid(row=5, column=1, padx=5, pady=5)
        self.manufacturer_scroll.grid(row=5, column=2, sticky="ns", padx=0)
        self.manufacturers = []  # ["Adidas", "Nike", "Puma"]
        for item in self.manufacturers:
            self.manufacturer_listbox.insert(END, item)

        # --- –ú–∞—Ç–µ—Ä—ñ–∞–ª (OptionMenu)
        Label(self.input_tab, text="–ú–∞—Ç–µ—Ä—ñ–∞–ª:").grid(row=6, column=0, sticky="w", padx=5, pady=5)
        self.materials = ("–®–∫—ñ—Ä–∞", "–ì—É–º–∞", "–°–∏–Ω—Ç–µ—Ç–∏–∫–∞")
        self.selected_material = StringVar()
        self.selected_material.set(self.materials[0])
        OptionMenu(self.input_tab, self.selected_material,
                   *self.materials).grid(row=6, column=1, padx=5, pady=5)

        # --- –†—ñ–∫ –≤–∏–ø—É—Å–∫—É (OptionMenu –∑ –∫–æ—Ä—Ç–µ–∂—É)
        Label(self.input_tab, text="–†—ñ–∫ –≤–∏–ø—É—Å–∫—É:").grid(row=7, column=0, sticky="w", padx=5, pady=5)
        self.years = ("2020", "2021", "2022", "2023", "2024")
        self.selected_year = StringVar()
        self.selected_year.set(self.years[0])
        OptionMenu(self.input_tab, self.selected_year,
                   *self.years).grid(row=7, column=1, padx=5, pady=5)

        # --- –ö—Ä–∞—ó–Ω–∞ (OptionMenu –∑ –∫–æ—Ä—Ç–µ–∂—É)
        Label(self.input_tab, text="–ö—Ä–∞—ó–Ω–∞ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞:").grid(row=8, column=0, sticky="w", padx=5, pady=5)
        self.countries = ("–£–∫—Ä–∞—ó–Ω–∞", "–°–®–ê", "–ö–∏—Ç–∞–π", "–ù—ñ–º–µ—á—á–∏–Ω–∞")
        self.selected_country = StringVar()
        self.selected_country.set(self.countries[0])
        OptionMenu(self.input_tab, self.selected_country,
                   *self.countries).grid(row=8, column=1, padx=5, pady=5)

        # –î–ª—è –≤–≤–æ–¥–∞ —ñ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –≤–∏—Ä–æ–±–Ω–∏–∫—ñ–≤
        Label(self.input_tab, text="–ù–æ–≤–∏–π –≤–∏—Ä–æ–±–Ω–∏–∫:").grid(row=9, column=0, sticky="w", padx=5, pady=5)
        self.new_manufacturer_entry = Entry(self.input_tab)
        self.new_manufacturer_entry.grid(row=9, column=1, padx=5, pady=5)

        # –ö–Ω–æ–ø–∫–∏ –∫–µ—Ä—É–≤–∞–Ω–Ω—è —Å–ø–∏—Å–∫–æ–º
        (Button(self.input_tab, text="‚ûï –î–æ–¥–∞—Ç–∏",
                command=lambda: ListboxManager.add_item(self.manufacturer_listbox,
                                                        self.new_manufacturer_entry)).grid(row=10, column=0, padx=5,
                                                                                           pady=2))
        Button(self.input_tab, text="‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏",
               command=lambda: ListboxManager.edit_item(self.manufacturer_listbox,
                                                        self.new_manufacturer_entry)).grid(row=10, column=1, padx=5,
                                                                                           pady=2)
        Button(self.input_tab, text="üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏",
               command=lambda: ListboxManager.delete_item(self.manufacturer_listbox)).grid(row=11, column=0, padx=5,
                                                                                           pady=2)
        Button(self.input_tab, text="üîÉ –°–æ—Ä—Ç—É–≤–∞—Ç–∏",
               command=lambda: ListboxManager.sort_items(self.manufacturer_listbox)).grid(row=11, column=1, padx=5,
                                                                                          pady=2)
        Button(self.input_tab, text="‚Ü©Ô∏è –ó–≤–æ—Ä–æ—Ç–Ω—ñ–π –ø–æ—Ä—è–¥–æ–∫",
               command=lambda: ListboxManager.reverse_items(self.manufacturer_listbox)).grid(row=12, column=0, padx=5,
                                                                                             pady=2)
        Button(self.input_tab, text="‚ÑπÔ∏è –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Ä–æ–∑–º—ñ—Ä",
               command=lambda: ListboxManager.check_list_size(self.manufacturer_listbox, limit=5)).grid(row=12,
                                                                                                        column=1,
                                                                                                        padx=5, pady=2)

        # –∫–Ω–æ–ø–∫–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –æ–±'—î–∫—Ç
        Button(self.input_tab, text="‚úÖ –°—Ç–≤–æ—Ä–∏—Ç–∏ –æ–±'—î–∫—Ç",
               command=self.control.create_soccer_ball).grid(row=14, column=0,
                                                             columnspan=3, pady=15)

        self.result_label = Label(self.obj_tab, text="", justify=LEFT, font=("Arial", 12))
        self.result_label.pack(anchor="nw", padx=10, pady=10)

        self.result_image_label = Label(self.obj_tab)
        self.result_image_label.pack(pady=10)

    def update_result_image(self, image_path):
        try:
            print("–ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é:", image_path)
            print("–°—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª:", os.path.exists(image_path))
            print("–¢–µ–∫—É—â–∞—è —Ä–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:", os.getcwd())

            img = Image.open(image_path)
            img = img.resize((250, 150))
            self.tk_result_img = ImageTk.PhotoImage(img)
            self.result_image_label.config(image=self.tk_result_img, text="")
            print(f"[‚úÖ] –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: {image_path}")

        except Exception as e:
            print(f"[‚ùå] –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è: {e}")
            self.result_image_label.config(image='', text="‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è")

    def set_gallery_view(self, view):
        self.view = view
        # –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–µ—Ä–µ–º–∏–∫–∞—Ç–∏
        Button(self.input_tab, text="‚¨ÖÔ∏è –ü–æ–ø–µ—Ä–µ–¥–Ω—î",
               command=self.view.prev_image).grid(row=13, column=0, padx=10)
        Button(self.input_tab, text="‚û°Ô∏è –ù–∞—Å—Ç—É–ø–Ω–µ",
               command=self.view.next_image).grid(row=13, column=1, padx=10)
